name: Cloud Run Cleanup (Reusable)

on:
  workflow_call:
    inputs:
      service_name:
        required: false
        type: string
        description: "Exact name of the Cloud Run service to delete"
      gcp_project_id:
        required: true
        type: string
        description: "GCP project ID"
      region:
        required: true
        type: string
        description: "GCP region where the service is deployed"
      workload_identity_provider:
        required: true
        type: string
        description: "Workload identity provider"
      service_account:
        required: true
        type: string
        description: "Service account"
      config_file:
        required: false
        type: string
        description: "Path to the configuration file for this deployment"

jobs:
  cleanup:
    runs-on: zondax-runners
    permissions:
      id-token: write # Enables automatic ID token injection for google-github-actions/auth
      contents: read # Required for actions/checkout and GitHub API access
      pull-requests: write # Required for commenting on PRs
    steps:
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.service_account }}
          
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        
      - name: Read config file for service name
        id: read-config
        if: inputs.config_file != ''
        run: |
          if [ -f "${{ inputs.config_file }}" ]; then
            SERVICE_NAME=$(yq '.service.name' ${{ inputs.config_file }})
            echo "service_name=$SERVICE_NAME" >> $GITHUB_OUTPUT
          else
            echo "Config file not found: ${{ inputs.config_file }}"
            exit 1
          fi

      - name: Set final service name
        id: set-service-name
        run: |
          if [ "${{ inputs.config_file != '' }}" == "true" ] && [ "${{ steps.read-config.outputs.service_name }}" != "" ]; then
            if [ "${{ github.event_name }}" = "pull_request" ]; then
              FINAL_SERVICE_NAME="${{ steps.read-config.outputs.service_name }}-${{ github.event.number }}"
            else
              FINAL_SERVICE_NAME="${{ steps.read-config.outputs.service_name }}"
            fi
          else
            FINAL_SERVICE_NAME="${{ inputs.service_name }}"
          fi
          # Always sanitize the service name to ensure it follows Cloud Run naming conventions
          SAFE_SERVICE_NAME=$(echo "$FINAL_SERVICE_NAME" | tr '/' '-' | tr '_' '-' | tr '.' '-' | tr '[:upper:]' '[:lower:]')
          echo "safe_service_name=$SAFE_SERVICE_NAME" >> $GITHUB_OUTPUT

      - name: Delete Cloud Run Service (Final Name)
        run: |
          echo "Deleting Cloud Run service: ${{ steps.set-service-name.outputs.safe_service_name }}"
          gcloud run services delete ${{ steps.set-service-name.outputs.safe_service_name }} --project ${{ inputs.gcp_project_id }} --region ${{ inputs.region }} --platform managed --quiet || true