name: Reusable Pulumi Workflow

on:
  workflow_call:
    inputs:
      stack-name:
        required: true
        type: string
      project-id:
        required: true
        type: string
      workload-identity-provider-plan:
        required: true
        type: string
      workload-identity-provider-apply:
        required: true
        type: string  
      cloud-url:
        required: true
        type: string
      environment:
        required: true
        type: string

jobs:
  pulumi:
    name: Pulumi
    runs-on: zondax-runners
    permissions:
      id-token: write  # Enables automatic ID token injection for google-github-actions/auth
      contents: read   # Required for actions/checkout and GitHub API access
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Added to authenticate GitHub API calls for plugin downloads

      # Set conditional environment variables based on event type
      WORKLOAD_IDENTITY_PROVIDER: ${{ github.event_name == 'pull_request' && inputs.workload-identity-provider-plan || inputs.workload-identity-provider-apply }}
      PULUMI_COMMAND: ${{ github.event_name == 'pull_request' && 'preview' || 'up' }}
    steps:
      # Dependencies installed          
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: OIDC Debugger
        uses: 'github/actions-oidc-debugger@main'
        with:
          audience: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Authenticate with Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ inputs.project-id }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      # Set up Google Cloud SDK (in case gcloud is not already installed on the runner).       
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          install_components: 'beta'

      # Verify authentication and permissions
      - name: Verify GCP authentication
        run: |
          echo "=== Authenticated Account ==="
          gcloud auth list
          
          echo "=== Project Info ==="
          gcloud config get-value project
          
          echo "=== Service Account Details ==="
          gcloud auth list --format="get(account)"
          
          echo "=== Basic Access Test ==="
          # Test if we can list storage buckets (requires storage.buckets.list permission)
          gcloud storage ls 2>&1 || echo "Note: No storage access or no buckets"
                    
          echo "=== Current Configuration ==="
          gcloud config list

      ## GCP access should be ready

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"

      - name: Install dependencies
        run: bun install
  
      - name: Run Pulumi
        uses: pulumi/actions@v6
        with:
          command: ${{ env.PULUMI_COMMAND }}
          stack-name: ${{ inputs.stack-name }}
          cloud-url: ${{ inputs.cloud-url }}
          comment-on-pr: true
          comment-on-summary: true