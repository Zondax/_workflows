name: Build Docker Image (Reusable)

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "Environment name"
      image_name:
        required: true
        type: string
      build_tool:
        required: false
        type: string
        default: docker
      workdir:
        required: false
        type: string
        default: .
      dockerfiles:
        required: false
        type: string
        default: Dockerfile
      bake_targets:
        required: false
        type: string
        default: ''
    outputs:
      image_tag:
        description: "The full tag of the built image."
        value: ${{ jobs.build.outputs.image_tag }}
jobs:
  build:
    runs-on: zondax-runners
    environment: ${{ inputs.environment }}
    outputs:
      image_tag: ${{ steps.build_image.outputs.image_tag }}
    permissions:
      id-token: write # Enables automatic ID token injection for google-github-actions/auth
      contents: read # Required for actions/checkout and GitHub API access
      pull-requests: write # Required for commenting on PRs
    steps:
      - uses: actions/checkout@v4
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.PULUMI_DEPLOY_WIF_PROVIDER }}
          service_account: ${{ vars.PULUMI_SA_CLOUDRUN }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Configure Docker to use gcloud (for Artifact Registry)
        run: gcloud auth configure-docker ${{ vars.PULUMI_GAR_LOCATION }}-docker.pkg.dev
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - name: Build Docker image
        id: build_image
        working-directory: ${{ inputs.workdir }}
        run: |
          # Parse dockerfiles input into multiple -f flags
          IFS=',' read -ra FILES <<< "${{ inputs.dockerfiles }}"
          DOCKERFILE_FLAGS=""
          for f in "${FILES[@]}"; do
            DOCKERFILE_FLAGS+=" -f $f"
          done
          IMAGE_TAG_SHA="${{ vars.PULUMI_GAR_LOCATION }}-docker.pkg.dev/${{ vars.PULUMI_PROJECT_ID }}/${{ vars.PULUMI_GAR_REPOSITORY }}/${{ inputs.image_name }}:${{ github.sha }}"
          if [ "${{ inputs.build_tool }}" = "bake" ]; then
            # If bake_targets is set, add them as arguments
            BAKE_TARGETS=""
            if [ -n "${{ inputs.bake_targets }}" ]; then
              IFS=',' read -ra TARGETS <<< "${{ inputs.bake_targets }}"
              for t in "${TARGETS[@]}"; do
                BAKE_TARGETS+=" $t"
              done
            fi
            docker buildx bake $DOCKERFILE_FLAGS $BAKE_TARGETS --set "*.tags=$IMAGE_TAG_SHA"
          else
            docker build $DOCKERFILE_FLAGS --tag "$IMAGE_TAG_SHA" .
          fi
          echo "image_tag=$IMAGE_TAG_SHA" >> $GITHUB_OUTPUT
      - name: Push Docker image to Artifact Registry
        run: |
          docker push "${{ steps.build_image.outputs.image_tag }}"
