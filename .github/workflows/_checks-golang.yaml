name: Reusable Checks golang

on:
  workflow_call:
    inputs:
      package_path:
        description: "Path to the Go package relative to the repository root"
        type: string
        default: "."
      go_version:
        description: "Go version to use"
        type: string
        default: "1.24"
      runner:
        description: "GitHub runner to use"
        type: string
        default: "zondax-runners"
      github_app_auth:
        description: "Use GitHub App Token"
        required: false
        type: boolean
        default: false
      github_app_repos:
        description: "Additional repositories to access (one per line)"
        required: false
        type: string
        default: ""
      enable_coverage:
        description: "Enable coverage checks and reporting"
        required: false
        type: boolean
        default: true
      upload_coverage:
        description: "Upload coverage reports to Codecov"
        required: false
        type: boolean
        default: false
      coverage_threshold:
        description: "Minimum coverage percentage required"
        required: false
        type: number
        default: 75
      codecov_flags:
        description: "Flags to pass to Codecov"
        required: false
        type: string
        default: ""
    secrets:
      codecov_token:
        description: "Codecov token for private repositories"
        required: false

jobs:
  checks:
    runs-on: ${{ inputs.runner }}
    container:
      image: golang:${{ inputs.go_version }}
      options: --tty
    timeout-minutes: 15

    steps:
      - name: Generate GitHub App Token
        id: app-token
        if: inputs.github_app_auth != false
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.app_id }}
          private-key: ${{ secrets.app_pem }}
          repositories: |
            ${{ inputs.github_app_repos }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ steps.app-token.outputs.token || github.token }}

      - name: Build
        run: |
          git config --global --add safe.directory "*"
          cd ${{ inputs.package_path }}
          make go-build

      - name: ModTidy check
        run: |
          cd ${{ inputs.package_path }}
          make go-mod-check

      - name: Lint check
        run: |
          cd ${{ inputs.package_path }}
          make go-lint-install
          make go-lint

      - name: Run tests
        run: |
          cd ${{ inputs.package_path }}
          make go-test

      - name: Run coverage
        if: inputs.enable_coverage
        run: |
          cd ${{ inputs.package_path }}
          make go-coverage

      - name: Upload to Codecov and enforce threshold
        if: inputs.enable_coverage && inputs.upload_coverage
        run: |
          bash <(curl -s https://codecov.io/bash) \
            -t "${{ secrets.codecov_token }}" \
            -f "${{ inputs.package_path }}/profile.cov" \
            -F "${{ inputs.codecov_flags }}" \
            --fail-under="${{ inputs.coverage_threshold }}"
