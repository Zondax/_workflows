name: Reusable Checks golang

on:
  workflow_call:
    inputs:
      package_path:
        description: "Path to the Go package relative to the repository root"
        type: string
        default: "."
      go_version:
        description: "Go version to use"
        type: string
        default: "1.24"
      runner:
        description: "GitHub runner to use"
        type: string
        default: "zondax-runners"
      app_id:
        description: "GitHub App ID"
        required: false
        type: string
        default: ""
      app_pem:
        description: "GitHub App PEM"
        required: false
        type: string
        default: ""
      repositories:
        description: "Additional repositories to access (one per line)"
        required: false
        type: string
        default: ""

jobs:
  checks:
    runs-on: ${{ inputs.runner }}
    container:
      image: golang:${{ inputs.go_version }}
      options: --tty
    timeout-minutes: 15

    env:
      GITHUB_APP_ID: ${{ inputs.app_id }}
      GITHUB_APP_PEM: ${{ inputs.app_pem }}

    steps:
      - name: Generate GitHub App Token
        id: app-token
        if: ${{ inputs.app_id != '' && inputs.app_pem != '' }}
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ env.GITHUB_APP_ID }}
          private-key: ${{ env.GITHUB_APP_PEM }}
          repositories: |
            ${{ github.event.repository.full_name }}
            ${{ inputs.repositories }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ steps.app-token.outputs.token || github.token }}
      - name: Build
        run: |
          git config --global --add safe.directory "*"
          cd ${{ inputs.package_path }}
          make go-build
      - name: ModTidy check
        run: |
          cd ${{ inputs.package_path }}
          make go-mod-check
      - name: Lint check
        run: |
          cd ${{ inputs.package_path }}
          make go-lint-install
          make go-lint
      - name: Run tests
        run: |
          cd ${{ inputs.package_path }}
          make go-test
