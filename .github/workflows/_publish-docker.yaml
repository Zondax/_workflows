name: Reusable Publish Docker

on:
  workflow_call:
    inputs:
      runner:
        description: "Runner to use for the workflow"
        type: string
        default: "zondax-runners"
      timeout_minutes:
        description: "Timeout in minutes for the job"
        type: number
        default: 15
      checkout_ref:
        description: "The ref to checkout (branch, tag, SHA)"
        type: string
        default: ""
        required: false
      app_id:
        description: "GitHub App ID"
        required: false
        type: string
        default: ""
      app_pem:
        description: "GitHub App PEM"
        required: false
        type: string
        default: ""
      repositories:
        description: "Additional repositories to access (one per line)"
        required: false
        type: string
        default: ""
    secrets:
      DOCKERHUB_USER:
        description: "Docker Hub username"
        required: true
      DOCKERHUB_TOKEN:
        description: "Docker Hub access token"
        required: true

jobs:
  publish:
    timeout-minutes: ${{ inputs.timeout_minutes }}
    runs-on: ${{ inputs.runner }}
    permissions:
      contents: read
      packages: write
      id-token: write # Needed for SLSA provenance

    env:
      GITHUB_APP_ID: ${{ inputs.app_id }}
      GITHUB_APP_PEM: ${{ inputs.app_pem }}

    steps:
      - name: Generate GitHub App Token
        id: app-token
        if: ${{ inputs.app_id != '' && inputs.app_pem != '' }}
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ env.GITHUB_APP_ID }}
          private-key: ${{ env.GITHUB_APP_PEM }}
          repositories: |
            ${{ github.event.repository.full_name }}
            ${{ inputs.repositories }}

      - name: Install deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -yy git make

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.checkout_ref || github.event.pull_request.head.ref || github.ref }}
          token: ${{ steps.app-token.outputs.token || github.token }}

      - name: Debug GitHub variables
        run: |
          echo "Debug GitHub variables:"
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.ref: ${{ github.ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "github.head_ref: ${{ github.head_ref }}"
          echo "github.base_ref: ${{ github.base_ref }}"
          echo "github.event.pull_request.head.ref: ${{ github.event.pull_request.head.ref }}"
          echo "github.event.pull_request.base.ref: ${{ github.event.pull_request.base.ref }}"
          echo "github.sha: ${{ github.sha }}"

      - name: Set branch name
        run: |
          echo "Setting branch name..."
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            GIT_BRANCH_GITHUB="${{ github.head_ref }}"
            echo "Using PR head ref: $GIT_BRANCH_GITHUB"
          else
            GIT_BRANCH_GITHUB="${{ github.ref_name }}"
            echo "Using ref name: $GIT_BRANCH_GITHUB"
          fi
          echo "GIT_BRANCH_GITHUB=$GIT_BRANCH_GITHUB" >> $GITHUB_ENV
          echo "GIT_BRANCH_GITHUB=$GIT_BRANCH_GITHUB"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Info before publishing
        run: |
          make docker-info

      - name: Publish
        env:
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        run: |
          make docker-publish
