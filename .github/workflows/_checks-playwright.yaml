name: Playwright Tests
on:
  workflow_call:
    inputs:
      working_directory:
        description: "Working directory for tests"
        type: string
        default: "."
      build_command:
        description: "Build command to run before tests"
        type: string
        default: "pnpm run build"
      test_command:
        description: "Command to run Playwright tests"
        type: string
        default: "pnpm run test:e2e:sharding"
      install_command:
        description: "Command to install Playwright browsers"
        type: string
        default: "pnpm test:e2e:install"
      runner:
        description: "GitHub runner to use"
        type: string
        default: "zondax-runners"
      base_image:
        description: "Docker image to use for base image"
        type: string
        default: "ubuntu:24.04"
      node_version:
        description: "Node.js version to use"
        type: string
        default: "22"
      pnpm_version:
        description: "pnpm version to use"
        type: string
        default: "latest"
      use_env_local:
        description: "Whether to use the environment local file provided in secrets"
        type: boolean
        required: false
        default: true
      checkout_submodules:
        description: "Checkout submodules"
        required: false
        type: boolean
        default: true
      github_app_auth:
        description: "Use GitHub App Token"
        required: false
        type: boolean
        default: false
      github_app_repos:
        description: "Additional repositories to access (one per line)"
        required: false
        type: string
        default: ""
      autoinit_env:
        description: "Automatically run env:init:ci script after installing dependencies"
        required: false
        type: boolean
        default: false
      environment:
        description: "Environment name to use for accessing environment variables"
        required: false
        type: string
        default: ""
    secrets:
      env_local:
        description: "Env local file to set environment variables (one export per line)"
        required: false
      app_id:
        description: "GitHub App ID"
        required: false
      app_pem:
        description: "GitHub App PEM"
        required: false

env:
  HEAD_SHA: ${{ github.event.pull_request.head.sha }}
  HEAD_BRANCH_NAME: ${{ github.head_ref }}

jobs:
  playwright:
    name: Playwright Shard
    runs-on: ${{ inputs.runner }}
    strategy:
      matrix:
        include:
          - position: shard1
            playwrightShard: "1/2"
          - position: shard2
            playwrightShard: "2/2"
    container:
      image: ${{ inputs.base_image }}
      env:
        PLAYWRIGHT_SHARD: ${{ matrix.playwrightShard }}
        CI: true
        HEAD_SHA: ${{ env.HEAD_SHA }}
        HEAD_BRANCH_NAME: ${{ env.HEAD_BRANCH_NAME }}
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      id-token: write  # Required for Workload Identity Federation
    steps:
      - name: Setup Ubuntu packages
        uses: zondax/_actions/setup-ubuntu-packages@main
        with:
          packages: |
            - git
            - jq
            - libnss3
            - libnspr4
            - libdbus-1-3
            - libatk1.0-0t64
            - libatk-bridge2.0-0t64
            - libatspi2.0-0t64
            - libxcomposite1
            - libxdamage1
            - libxfixes3
            - libxrandr2
            - libgbm1
            - libxkbcommon0
            - libasound2t64

      - name: Checkout with GitHub App
        uses: zondax/_actions/checkout-with-app@main
        with:
          github_app_auth: ${{ inputs.github_app_auth }}
          github_app_repos: ${{ inputs.github_app_repos }}
          checkout_submodules: ${{ inputs.checkout_submodules }}
          app_id: ${{ secrets.app_id }}
          app_pem: ${{ secrets.app_pem }}

      - name: Authenticate with GCP
        if: ${{ inputs.autoinit_env && inputs.environment != '' }}
        uses: zondax/_actions/gcp-wif-auth@main
        with:
          workload_identity_provider: ${{ vars.PULUMI_FRONTEND_WIF_PROVIDER }}
          project_id: ${{ vars.PULUMI_GCP_PROJECT_ID }}

      - name: Setup environment variables
        if: inputs.use_env_local
        run: |
          # Create .env.local file directly for Next.js
          cd ${{ inputs.working_directory }}
          cat > .env.local << 'EOL'
          # Environment variables for Next.js
          ${{ secrets.env_local }}
          EOL

          # Show confirmation (only count lines for security)
          echo "Created .env.local file with $(grep -c "=" .env.local) environment variables"

      - name: Setup Node.js Environment
        id: setup-node
        uses: zondax/_actions/setup-node-env@main
        with:
          node_version: ${{ inputs.node_version }}
          package_manager: "pnpm"
          pnpm_version: ${{ inputs.pnpm_version }}
          autoinit_env: ${{ inputs.autoinit_env }}

      - name: Run build
        working-directory: ${{ inputs.working_directory }}
        run: |
          ${{ inputs.build_command }}

      - name: Install Playwright browsers
        working-directory: ${{ inputs.working_directory }}
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: ${{ inputs.working_directory }}
        run: |
          ${{ inputs.test_command }}

      - name: Upload Playwright Report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.position }}
          path: ${{ inputs.working_directory }}/playwright-report/
          retention-days: 15
