name: Reusable TypeScript Checks

on:
  workflow_call:
    inputs:
      enable_linting:
        description: "Enable linting checks"
        required: false
        type: boolean
        default: true
      enable_tests:
        description: "Enable tests execution"
        required: false
        type: boolean
        default: true
      enable_coverage:
        description: "Enable test coverage reporting"
        required: false
        type: boolean
        default: true
      upload_coverage:
        description: "Upload coverage reports to Codecov"
        required: false
        type: boolean
        default: false
      coverage_command:
        description: "Coverage command to run from package.json"
        required: false
        type: string
        default: "test:coverage"
      node_version:
        description: "Node.js version to use"
        required: false
        type: string
        default: "22"
      package_manager:
        description: "Package manager to use (bun or pnpm)"
        required: false
        type: string
        default: "bun"
      bun_version:
        description: "Bun version"
        required: false
        type: string
        default: "1.2.13"
      pnpm_version:
        description: "PNPM version"
        required: false
        type: string
        default: "10.4.1"
      base_image:
        description: "Docker image to use for base image"
        required: false
        type: string
        default: "ubuntu:24.04"
      test_command:
        description: "Test command to run from package.json"
        required: false
        type: string
        default: "test"
      lint_command:
        description: "Lint command to run from package.json"
        required: false
        type: string
        default: "lint"
      format_command:
        description: "Format command to run from package.json"
        required: false
        type: string
        default: "format:check"
      checkout_submodules:
        description: "Checkout submodules"
        required: false
        type: boolean
        default: true
      github_app_auth:
        description: "Use GitHub App Token"
        required: false
        type: boolean
        default: false
      github_app_repos:
        description: "Additional repositories to access (one per line)"
        required: false
        type: string
        default: ""
      codecov_flags:
        description: "Flags to pass to Codecov"
        required: false
        type: string
        default: ""
      autoinit_env:
        description: "Automatically run env:init:ci script after installing dependencies"
        required: false
        type: boolean
        default: false
      gcp_wif_provider:
        description: "GCP Workload Identity Provider (required if autoinit_env is true)"
        required: false
        type: string
        default: ""
      gcp_project_id:
        description: "GCP Project ID (required if autoinit_env is true)"
        required: false
        type: string
        default: ""
    secrets:
      app_id:
        description: "GitHub App ID"
        required: false
      app_pem:
        description: "GitHub App PEM"
        required: false
      codecov_token:
        description: "Codecov token for private repositories"
        required: false

jobs:
  checks-ts:
    runs-on: zondax-runners
    container:
      image: ${{ inputs.base_image }}
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write  # Required for Workload Identity Federation

    steps:
      - name: Install needed packages
        run: |
          apt-get update
          apt-get install -y git unzip jq

      - name: Checkout with GitHub App
        uses: zondax/_actions/checkout-with-app@main
        with:
          github_app_auth: ${{ inputs.github_app_auth }}
          github_app_repos: ${{ inputs.github_app_repos }}
          checkout_submodules: ${{ inputs.checkout_submodules }}
          ref: ${{ github.event.pull_request.head.sha }}
          app_id: ${{ secrets.app_id }}
          app_pem: ${{ secrets.app_pem }}

      - name: Authenticate with GCP
        if: ${{ inputs.autoinit_env && inputs.gcp_wif_provider != '' }}
        uses: zondax/_actions/gcp-wif-auth@main
        with:
          workload_identity_provider: ${{ inputs.gcp_wif_provider }}
          project_id: ${{ inputs.gcp_project_id }}

      - name: Setup Node.js Environment
        id: setup-node
        uses: zondax/_actions/setup-node-env@main
        with:
          node_version: ${{ inputs.node_version }}
          package_manager: ${{ inputs.package_manager }}
          package_manager_version: ${{ inputs.package_manager == 'bun' && inputs.bun_version || inputs.pnpm_version }}
          autoinit_env: ${{ inputs.autoinit_env }}

      - name: Check format
        run: ${{ steps.setup-node.outputs.pm_run }} ${{ inputs.format_command }}

      - name: Run lint
        if: ${{ inputs.enable_linting }}
        run: ${{ steps.setup-node.outputs.pm_run }} ${{ inputs.lint_command }}

      - name: Run tests
        if: ${{ inputs.enable_tests && !inputs.enable_coverage }}
        run: ${{ steps.setup-node.outputs.pm_run }} ${{ inputs.test_command }}

      - name: Run tests with coverage
        if: ${{ inputs.enable_tests && inputs.enable_coverage }}
        run: ${{ steps.setup-node.outputs.pm_run }} ${{ inputs.coverage_command }}

      - name: Vitest Coverage Report
        if: ${{ inputs.enable_tests && inputs.enable_coverage }}
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          vite-config-path: ./vitest.config.ts
          working-directory: .

      - name: Upload coverage reports to Codecov
        if: ${{ inputs.enable_tests && inputs.enable_coverage && inputs.upload_coverage }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.codecov_token }}
          flags: ${{ inputs.codecov_flags }}
          fail_ci_if_error: false
