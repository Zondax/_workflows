name: Reusable Proto Generation Check

on:
  workflow_call:
    inputs:
      runner:
        description: "GitHub runner to use"
        type: string
        default: "zondax-runners"
      container_image:
        description: "Container image to use"
        type: string
        default: "ubuntu:24.04"
      node_version:
        description: "Node.js version to use"
        type: string
        default: "22"
      github_app_auth:
        description: "Use GitHub App Token"
        required: false
        type: boolean
        default: false
      github_app_repos:
        description: "Additional repositories to access (one per line)"
        required: false
        type: string
        default: ""
      timeout_minutes:
        description: "Timeout in minutes for the job"
        type: number
        default: 10

jobs:
  checks-proto:
    runs-on: ${{ inputs.runner }}
    container:
      image: ${{ inputs.container_image }}
    timeout-minutes: ${{ inputs.timeout_minutes }}

    steps:
      - name: Setup Ubuntu packages
        uses: zondax/actions/setup-ubuntu-packages@v1
        with:
          packages: |
            - bash
            - protobuf-compiler

      - name: Checkout with GitHub App
        uses: zondax/actions/checkout-with-app@v1
        with:
          github_app_auth: ${{ inputs.github_app_auth }}
          github_app_repos: ${{ inputs.github_app_repos }}
          app_id: ${{ secrets.app_id }}
          app_pem: ${{ secrets.app_pem }}

      - name: Setup Node environment
        uses: zondax/actions/setup-node-env@v1
        id: setup-node
        with:
          node_version: ${{ inputs.node_version }}
          package_manager: bun
          install_deps: true

      - name: Install protoc-gen-js
        run: |
          npm install -g protoc-gen-js
          # Verify installation
          which protoc-gen-js || echo "protoc-gen-js not found in PATH"

      - name: Generate ts from proto
        run: ${{ steps.setup-node.outputs.pm_run }} gen:proto

      - name: Check for pending changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo -e "\033[0;31m❌ ERROR\033[0m: There are uncommitted changes after proto generation."
            echo "This likely means the proto files were modified but the generated code wasn't updated."
            echo "Please run 'bun gen:proto' locally and commit the changes."
            git status
            exit 1
          else
            echo -e "\033[0;32m✅\033[0m No pending changes detected after proto generation."
          fi
