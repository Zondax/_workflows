name: Ledger Lint Reusable Workflow

on:
  workflow_call:
    inputs:
      runs-on:
        description: 'Runner to use for jobs'
        required: false
        type: string
        default: 'ubuntu-latest'
      check_rust:
        description: 'Enable Rust checks (installs libnewlib-arm-none-eabi)'
        required: false
        type: boolean
        default: false

jobs:
  lint:
    runs-on: ${{ inputs.runs-on }}
    container: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-legacy:latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Add missing deps
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update
          if [ "${{ inputs.check_rust }}" = "true" ]; then
            apt-get install -y bear sudo libnewlib-arm-none-eabi
          else
            apt-get install -y bear sudo
          fi
      - name: Generate compilation database
        run: bear -- make -j BOLOS_SDK="$NANOSP_SDK"
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Lint and format ðŸ’…
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file-annotations: true
          files-changed-only: false
          ignore: "app/build|cmake|deps|fuzz|tests"
          step-summary: true
          style: file # uses .clang-format
          thread-comments: true
          tidy-checks: "" # use only .clang-tidy checks
      - name: Fail if errors
        if: steps.linter.outputs.checks-failed > 0
        run: |
          echo "Linter or formatter failed!"
          exit 1