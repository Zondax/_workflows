name: Reusable Publish NPM

on:
  workflow_call:
    inputs:
      timeout_minutes:
        description: "Timeout in minutes for the job"
        type: number
        default: 15
      dry_run:
        description: "If true, will not publish to npm"
        type: boolean
        default: false
      github_app_auth:
        description: "Use GitHub App Token"
        required: false
        type: boolean
        default: false
      github_app_repos:
        description: "Additional repositories to access (one per line)"
        required: false
        type: string
        default: ""
      base_image:
        description: "Docker image to use for base image"
        required: false
        type: string
        default: "ubuntu:24.04"

    secrets:
      NPM_TOKEN:
        description: "NPM token for publishing"
        required: true
      app_id:
        description: "GitHub App ID"
        required: false
      app_pem:
        description: "GitHub App PEM"
        required: false

jobs:
  publish:
    timeout-minutes: ${{ inputs.timeout_minutes }}
    runs-on: "zondax-runners"
    container:
      image: ${{ inputs.base_image }}

    steps:
      - name: Setup Ubuntu packages
        uses: zondax/_actions/setup-ubuntu-packages@main
        with:
          packages: |
            - git
            - unzip
            - jq

      - name: Checkout with GitHub App
        uses: zondax/_actions/checkout-with-app@main
        with:
          github_app_auth: ${{ inputs.github_app_auth }}
          github_app_repos: ${{ inputs.github_app_repos }}
          fetch_depth: 0
          checkout_submodules: true
          app_id: ${{ secrets.app_id }}
          app_pem: ${{ secrets.app_pem }}

      - name: Setup Node environment
        uses: zondax/_actions/setup-node-env@main
        id: setup-node
        with:
          node_version: 20
          package_manager: bun
          install_deps: true

      - name: Configure npm registry
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          scope: "@zondax"

      - name: Build package
        run: if grep -q '"build"' package.json; then ${{ steps.setup-node.outputs.pm_run }} build; else echo "No build script found, skipping"; fi

      - name: Set version from Git
        run: npm version from-git --no-git-tag-version

      - name: Log package version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "Package version: $VERSION"
          echo "::notice title=NPM Package Version::$VERSION"

      - name: Copy README.npm.md to README.md if exists
        run: |
          if [ -f README.npm.md ]; then
            cp README.npm.md README.md
            echo "Copied README.npm.md to README.md"
          fi

      - name: Publish package
        if: ${{ !inputs.dry_run }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip publishing (dry-run mode)
        if: ${{ inputs.dry_run }}
        run: echo "Dry-run mode enabled. Skipping npm publish."
